(function (n) { n.fn.validationEngineLanguage = function () { }; n.validationEngineLanguage = { newLang: function () { n.validationEngineLanguage.allRules = { required: { regex: "none", alertText: Resources.jQuery_validationEngine_required_alertText, alertTextCheckboxMultiple: Resources.jQuery_validationEngine_required_alertTextCheckboxMultiple, alertTextCheckboxe: Resources.jQuery_validationEngine_required_alertTextCheckboxe, alertTextDateRange: Resources.jQuery_validationEngine_required_alertTextDateRange }, requiredInFunction: { func: function (n) { return n.val() == "test" ? !0 : !1 }, alertText: Resources.jQuery_validationEngine_requiredInFunction_alertText }, minSize: { regex: "none", alertText: Resources.jQuery_validationEngine_minSize_alertText, alertText2: Resources.jQuery_validationEngine_minSize_alertText2 }, groupRequired: { regex: "none", alertText: Resources.jQuery_validationEngine_groupRequired_alertText }, maxSize: { regex: "none", alertText: Resources.jQuery_validationEngine_maxSize_alertText, alertText2: Resources.jQuery_validationEngine_maxSize_alertText2 }, min: { regex: "none", alertText: Resources.jQuery_validationEngine_min_alertText }, max: { regex: "none", alertText: Resources.jQuery_validationEngine_max_alertText }, past: { regex: "none", alertText: Resources.jQuery_validationEngine_past_alertText }, future: { regex: "none", alertText: Resources.jQuery_validationEngine_future_alertText }, maxCheckbox: { regex: "none", alertText: Resources.jQuery_validationEngine_maxCheckbox_alertText }, minCheckbox: { regex: "none", alertText: Resources.jQuery_validationEngine_minCheckbox_alertText, alertText2: Resources.jQuery_validationEngine_minCheckbox_alertText2 }, equals: { regex: "none", alertText: Resources.jQuery_validationEngine_equals_alertText }, creditCard: { regex: "none", alertText: Resources.jQuery_validationEngine_creditCard_alertText }, phone: { regex: /^([\+][0-9]{1,3}[ \.\-])?([\(]{1}[0-9]{2,6}[\)])?([0-9 \.\-\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/, alertText: Resources.jQuery_validationEngine_phone_alertText }, email: { regex: /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i, alertText: Resources.jQuery_validationEngine_email_alertText }, integer: { regex: /^[\-\+]?\d+$/, alertText: Resources.jQuery_validationEngine_integer_alertText }, number: { regex: /^[\-\+]?((([0-9]{1,3})([,][0-9]{3})*)|([0-9]+))?([\.]([0-9]+))?$/, alertText: Resources.jQuery_validationEngine_number_alertText }, date: { regex: /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/, alertText: Resources.jQuery_validationEngine_date_alertText }, ipv4: { regex: /^((([01]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))[.]){3}(([0-1]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))$/, alertText: Resources.jQuery_validationEngine_ipv4_alertText }, url: { regex: /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i, alertText: Resources.jQuery_validationEngine_url_alertText }, onlyNumberSp: { regex: /^[0-9\ ]+$/, alertText: Resources.jQuery_validationEngine_onlyNumberSp_alertText }, onlyLetterSp: { regex: /^[a-zA-Z\ \']+$/, alertText: Resources.jQuery_validationEngine_onlyLetterSp_alertText }, onlyLetterNumberGuion: { regex: /^[0-9a-zA-Z-]{3,8}$/, alertText: Resources.jQuery_validationEngine_onlyLetterNumberGuion_alertText }, onlyLetterNumber: { regex: /^[0-9a-zA-Z]+$/, alertText: Resources.jQuery_validationEngine_onlyLetterNumber_alertText }, vehiclePlateFormat: { regex: "^[a-zA-Z]{3}-d{3}$", alertText: Resources.jQuery_validationEngine_vehiclePlateFormat_alertText }, hourFormat: { regex: "^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])$", alertText: Resources.jQuery_validationEngine_hourFormat_alertText } } } }; n.validationEngineLanguage.newLang() })(jQuery);
/*
//# sourceMappingURL=jquery.validationEngine-languageSettings.min.js.map
*/