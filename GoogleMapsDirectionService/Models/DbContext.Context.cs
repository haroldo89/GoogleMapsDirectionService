//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GoogleMapsDirectionService.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProtektoTestEntities : DbContext
    {
        public ProtektoTestEntities()
            : base("name=ProtektoTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LocationPoint> LocationPoint { get; set; }
        public virtual DbSet<RouteDetail> RouteDetail { get; set; }
        public virtual DbSet<Route> Route { get; set; }
        public virtual DbSet<ViewRoute> ViewRoute { get; set; }
    
        public virtual int spCreateRoute(string routeName, string routeLineString, ObjectParameter resultMessage)
        {
            var routeNameParameter = routeName != null ?
                new ObjectParameter("routeName", routeName) :
                new ObjectParameter("routeName", typeof(string));
    
            var routeLineStringParameter = routeLineString != null ?
                new ObjectParameter("routeLineString", routeLineString) :
                new ObjectParameter("routeLineString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCreateRoute", routeNameParameter, routeLineStringParameter, resultMessage);
        }
    
        public virtual ObjectResult<ViewRoute> spGetRoutes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewRoute>("spGetRoutes");
        }
    
        public virtual ObjectResult<ViewRoute> spGetRoutes(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewRoute>("spGetRoutes", mergeOption);
        }
    }
}
